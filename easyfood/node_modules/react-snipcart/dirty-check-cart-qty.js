'use strict';

var raf = require('raf');

// Have to dirty check since SC's APIs don't yet support all actions that can change total
// Check when supported
function DirtyCheck() {
	this.qty = 0;
	this.isChecking = false;
	this.events = [];
	this.check = this.check.bind(this);
}
DirtyCheck.prototype = {
	start: function start() {
		this.isChecking = true;
		raf(this.check);
	},
	stop: function stop() {
		this.isChecking = false;
	},
	getQty: function getQty() {
		return window.Snipcart.api.items.count();
	},
	check: function check() {
		if (window.Snipcart) {
			var qty = this.getQty();
			if (qty !== this.qty) {
				this.qty = qty;
				this.triggerEvents();
			}
		}
		if (this.isChecking) {
			raf(this.check);
		}
	},
	triggerEvents: function triggerEvents() {
		for (var i = this.events.length; i--;) {
			this.events[i](this.qty);
		}
	},
	addChangeEvent: function addChangeEvent(fn) {
		this.events.push(fn);
		if (this.events.length === 1) {
			this.start();
		}
	},
	removeChangeEvent: function removeChangeEvent(fn) {
		var i = this.events.indexOf(fn);
		this.events.splice(i, 1);
		if (this.events.length === 0) {
			this.stop();
		}
	}
};

module.exports = new DirtyCheck();