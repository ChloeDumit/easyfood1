'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var addToCart = function (_React$Component) {
	_inherits(addToCart, _React$Component);

	function addToCart(props) {
		_classCallCheck(this, addToCart);

		var _this = _possibleConstructorReturn(this, (addToCart.__proto__ || Object.getPrototypeOf(addToCart)).call(this, props));

		_this.addToCart = _this.addToCart.bind(_this);
		return _this;
	}

	_createClass(addToCart, [{
		key: 'addToCart',
		value: function addToCart(e) {
			var _this2 = this;

			if (window.Snipcart) {
				window.Snipcart.api.items.add(Object.assign({
					autopop: false
				}, this.props.data)).then(function (item) {
					if (_this2.props.data.openCart) {
						window.Snipcart.api.modal.show();
					}
				});
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var dataAttrs = {};
			for (var i in this.props.data) {
				dataAttrs['data-' + i] = this.props.data[i];
			}
			return _react2.default.createElement(
				'div',
				{ onClick: this.addToCart },
				this.props.children,
				_react2.default.createElement('div', _extends({}, dataAttrs, { style: { display: 'none' } }))
			);
		}
	}]);

	return addToCart;
}(_react2.default.Component);

exports.default = addToCart;